# 背景
## 目录结构
docs/ 文档
lib/  代码
test/ 测试


# 流程
1. 先查阅需求文档和设计文档（请按照`##相关文档`章节的目录进行查询）
2. 检查是否有遗漏的说明或者错误（例如异常情况），在文档中修正
3. 思考如何实现，功能模块之间怎么交互，数据怎么处理
4. 开始进行代码实现
5. 实现单元测试，运行测试用例
6. 如果测试失败，检查错误，并回到第一步继续往下实现

## 相关文档
- 需求文档: `docs/prd-connect-and-transfer.md`
- 设计文档: `docs/Design-BifrostTransfer.md`
- ui设计（仅供风格参考）：`docs/ui.html`, `docs/ui.md`

# 全局规则
1. 输出的markdown文档中，代码块需要缩进2格后再输出，例如
<markdown样例>
代码：
    ```dart
    print('Hello, World!');
    ```
</markdown样例>

## 代码实现要求
1. 严格按照技术设计文档实现，不允许私自添加功能
2. 每次代码实现都要能够运行看到效果
3. `ui.html`仅供参考，每次实现只专注US指定的部分，而非UI的全体部分
4. 每次实现单个功能时，都需要确定好代码结构，再进行实现
5. 每次实现功能时，尽量不修改其他模块的代码和单元测试