// Mocks generated by Mockito 5.4.5 from annotations
// in bifrost_transfer/test/mocks/mock_text_transfer_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:bifrost_transfer/application/models/text_transfer_model.dart'
    as _i4;
import 'package:bifrost_transfer/application/services/text_transfer_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TextTransferService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTextTransferService extends _i1.Mock
    implements _i2.TextTransferService {
  MockTextTransferService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.TextTransferModel> get textTransferStream =>
      (super.noSuchMethod(
            Invocation.getter(#textTransferStream),
            returnValue: _i3.Stream<_i4.TextTransferModel>.empty(),
          )
          as _i3.Stream<_i4.TextTransferModel>);

  @override
  _i3.Future<String> sendText(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#sendText, [text]),
            returnValue: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#sendText, [text]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<void> cancelTextTransfer(String? transferId) =>
      (super.noSuchMethod(
            Invocation.method(#cancelTextTransfer, [transferId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  List<_i4.TextTransferModel> getActiveTextTransfers() =>
      (super.noSuchMethod(
            Invocation.method(#getActiveTextTransfers, []),
            returnValue: <_i4.TextTransferModel>[],
          )
          as List<_i4.TextTransferModel>);

  @override
  _i4.TextTransferModel? getTextTransfer(String? transferId) =>
      (super.noSuchMethod(Invocation.method(#getTextTransfer, [transferId]))
          as _i4.TextTransferModel?);
}
